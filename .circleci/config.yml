# PHP CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-php/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: phpdocker/phpdocker:7.1
        environment:
          - DB_DATABASE: testing
          - DB_USERNAME: testing
          - DB_PASSWORD: testing

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ arch }}-{{ checksum "composer.lock" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-
      - run: service mysql start
      - run: mysql -e "create database if not exists testing;"
      - run: mysql -e "create or replace user testing@localhost identified by 'testing';"
      - run: mysql -e "grant all privileges on *.* to testing@localhost;"
      - run: composer config -g github-oauth.github.com $GITHUB_TOKEN
      - run: composer install -n --prefer-dist --no-progress -o

      - save_cache:
          key: v1-dependencies-{{ arch }}-{{ checksum "composer.lock" }}
          paths:
            - ./vendor

      # run tests!
      - run: ./vendor/bin/phpunit -vvv
  deploy:
    docker:
      # specify the version you desire here
      - image: circleci/php:7.1.8-browsers
        environment:
          ANSIBLE_HOST_KEY_CHECKING: False

    working_directory: ~/repo

    steps:
      - checkout
      - run: echo "deb http://ppa.launchpad.net/ansible/ansible/ubuntu trusty main" | sudo tee -a /etc/apt/sources.list
      - run: sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 93C4A3FD7BB9C367
      - run: sudo apt-get update; sudo apt-get install ansible; ansible --version
      - deploy:
          command: ansible-playbook ./.ansible/deploy.playbook.yml -i ./.ansible/hosts.ini -v
          environment:
            ANSIBLE_CONFIG: ./.ansible/ansible.cfg

workflows:
  version: 2
  test-and-deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
          filters:
            tags:
              only: /.*/
            branches:
              only:
                - master
                - circleci
